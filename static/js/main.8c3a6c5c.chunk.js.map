{"version":3,"sources":["components/Ingredients/IngredientButton/IngredientButton.css","containers/MacBuilder/MacBuilder.css","components/Ingredients/Pasta/Pasta.css","logo.svg","App.css","assets/images/farfalle.png","assets/images/penne.png","assets/images/shell.png","assets/images/elbow.png","containers/Layout/Layout.js","components/Ingredients/IngredientButton/IngredientButton.js","components/Ingredients/Pasta/Pasta.js","components/UI/Slider/Slider.js","containers/MacBuilder/MacBuilder.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Layout","this","props","children","Component","FARFALLE_ICON","require","PENNE_ICON","SHELL_ICON","ELBOW_ICON","IngredientButton","state","selected","img","type","className","classes","Active","join","onClick","clicked","src","alt","Pasta","transformedIngredients","map","shapeKey","selectPasta","key","PrettoSlider","withStyles","root","color","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","CustomizedSlider","Typography","gutterBottom","text","valueLabelDisplay","marks","onChange","aria-label","defaultValue","aria-labelledby","step","min","max","MacBuilder","pasta","cheeses","cheeseNumber","pastaType","setState","handleSliderChange","event","newValue","console","log","value","label","valueLabelFormat","findIndex","mark","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8c3a6c5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"IngredientButton\":\"IngredientButton__IngredientButton__wUQxE\",\"Active\":\"IngredientButton__Active__18zKo\",\"Success\":\"IngredientButton__Success__2qtCm\",\"Danger\":\"IngredientButton__Danger__24xhE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MacBuilder\":\"MacBuilder__MacBuilder__13pcv\",\"Slider\":\"MacBuilder__Slider__1jwxs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pasta\":\"Pasta__Pasta__20JOt\"};","module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\",\"App-logo\":\"App__App-logo__3JCPt\",\"App-header\":\"App__App-header__3iH8L\",\"App-link\":\"App__App-link__13fTZ\"};","module.exports = __webpack_public_path__ + \"static/media/farfalle.ee593256.png\";","module.exports = __webpack_public_path__ + \"static/media/penne.2556b175.png\";","module.exports = __webpack_public_path__ + \"static/media/shell.31004ebc.png\";","module.exports = __webpack_public_path__ + \"static/media/elbow.e3d350e1.png\";","import React, { Component } from 'react';\n\nclass Layout extends Component {\n  render () {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\n\nexport default Layout; ","import React, { Component } from 'react';\nimport classes from './IngredientButton.css';\nconst FARFALLE_ICON = require('../../../assets/images/farfalle.png');\nconst PENNE_ICON = require('../../../assets/images/penne.png');\nconst SHELL_ICON = require('../../../assets/images/shell.png');\nconst ELBOW_ICON = require('../../../assets/images/elbow.png');\n\nclass IngredientButton extends Component {\n\n  state = {\n    selected: false,\n  }\n  render () {\n    let img = null;\n    switch (this.props.type){\n      case ('farfalle'):\n        img = FARFALLE_ICON;\n        break;\n      case ('penne'):\n        img = PENNE_ICON;\n        break;\n      case ('shell'):\n        img = SHELL_ICON;\n        break;\n      case ('elbow'):\n        img = ELBOW_ICON;\n        break;\n      default:\n        break;\n    }\n    return (\n      <button className = {this.props.selected === this.props.type ? [classes.IngredientButton, classes.Active].join(' ') : classes.IngredientButton}\n        onClick={() => this.props.clicked(this.props.type)}>\n        <img src={img} alt={this.props.type}></img>\n        {this.props.children}\n      </button>\n    )\n  }\n}\n\nexport default IngredientButton;","import React, { Component } from 'react';\nimport IngredientButton from '../IngredientButton/IngredientButton';\nimport classes from './Pasta.css';\n\n\nclass Pasta extends Component {\n  \n\n  render () {\n    const shapes = ['farfalle', 'penne', 'shell', 'elbow'];\n\n    let transformedIngredients = shapes.map(shapeKey => {\n      return (\n      <IngredientButton\n        clicked={this.props.selectPasta}\n        selected={this.props.selected}\n        key={shapeKey}\n        type={shapeKey}\n      >\n        {shapeKey}\n      </IngredientButton>\n      );\n    });\n  \n\n    return (\n      <div className={classes.Pasta}>\n        {transformedIngredients}\n      </div>\n      \n    )\n  }\n\n}\n\n\nexport default Pasta;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport classes from './Slider.css';\n\n\nfunction ValueLabelComponent(props) {\n  const { children, open, value } = props;\n\n  const popperRef = React.useRef(null);\n  React.useEffect(() => {\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  });\n\n  return (\n    <Tooltip\n      PopperProps={{\n        popperRef,\n      }}\n      open={open}\n      enterTouchDelay={0}\n      placement=\"top\"\n      title={value}\n    >\n      {children}\n    </Tooltip>\n  );\n}\n\nValueLabelComponent.propTypes = {\n  children: PropTypes.element.isRequired,\n  open: PropTypes.bool.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\n\nconst PrettoSlider = withStyles({\n  root: {\n    color: '#753e06',\n    height: 8,\n  },\n  thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -10,\n    '&:focus,&:hover,&$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\n\nexport default function CustomizedSlider(props) {\n\n  return (\n    <div>\n    <Typography gutterBottom>{props.text}</Typography>\n      <PrettoSlider\n        valueLabelDisplay=\"auto\"\n        marks={props.marks}\n        onChange={props.onChange}\n        aria-label=\"pretto slider\"\n        defaultValue={2}\n        aria-labelledby=\"discrete-slider-restrict\"\n        step={null}\n        min={1}\n        max={5} />\n      </div>\n  );\n}\n","import React, { Component } from 'react';\nimport Pasta from '../../components/Ingredients/Pasta/Pasta';\n//import Slider from '@material-ui/core/Slider';\nimport classes from './MacBuilder.css';\nimport Slider from '../../components/UI/Slider/Slider';\n\n\n\nclass MacBuilder extends Component {\n\n  state = {\n    pasta: null,\n    cheeses: [],\n    cheeseNumber: 0,\n  }\n\n  selectPasta = (pastaType) => {\n    this.setState({\n      pasta: pastaType\n    });\n  }\n\n  handleSliderChange = (event, newValue) => {\n    console.log(newValue);\n    this.setState({\n      cheeseNumber: newValue\n    })\n  };\n  \n  \n  render () {\n\n    function valueLabelFormat(value) {\n      return marks.findIndex(mark => mark.value === value) + 1;\n    }\n    \n    const marks = [\n      {\n        value: 1,\n        label: '1 cheese',\n      },\n      {\n        value: 2,\n        label: '2 Cheese',\n      },\n      {\n        value: 3,\n        label: '3 Cheese',\n      },\n      {\n        value: 4,\n        label: '4 Cheese',\n      },\n      {\n        value: 5,\n        label: '5 Cheese',\n      },\n    ];\n    return (\n      <div className={classes.MacBuilder}>\n        <Pasta\n          selectPasta={this.selectPasta}\n          selected={this.state.pasta}\n        />\n        Selected Pasta: {this.state.pasta}\n        <div className={classes.Slider}>\n          <Slider\n          valueLabelFormat={valueLabelFormat}\n          //getAriaValueText={valuetext}\n          marks={marks}\n          text='How Cheesy are we feeling?'\n          onChange={this.handleSliderChange}\n          />\n        {this.state.cheeseNumber}\n        </div>\n      </div>\n    )\n  }\n}\n\n\nexport default MacBuilder;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Layout from './containers/Layout/Layout';\nimport MacBuilder from './containers/MacBuilder/MacBuilder';\n\nfunction App() {\n  return (\n    <Layout>\n      <MacBuilder />\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}